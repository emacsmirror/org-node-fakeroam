This is org-node-fakeroam.info, produced by makeinfo version 7.1 from
org-node-fakeroam.texi.

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Org-node-fakeroam: (org-node-fakeroam). Integrate org-roam and org-node.
END-INFO-DIR-ENTRY


File: org-node-fakeroam.info,  Node: Top,  Next: Getting started,  Up: (dir)

org-node-fakeroam
*****************

Some awesome shims for integrating org-node
(https://github.com/meedstrom/org-node) with org-roam.

* Menu:

* Getting started::
* Bonus setup::

-- The Detailed Node Listing --

Bonus setup

* Speeding up the backlinks buffer::
* Speeding up the org-roam DB::
* Misc::

Misc

* Tip Rebuilding the Roam DB::
* Tip On very slow filesystems::
* Tip Word-wrap in the Roam buffer?::



File: org-node-fakeroam.info,  Node: Getting started,  Next: Bonus setup,  Prev: Top,  Up: Top

1 Getting started
*****************

These settings help you feel at home using both org-roam and org-node
side-by-side:

     (setq org-node-creation-fn #'org-node-fakeroam-new-via-roam-capture)
     (setq org-node-slug-fn #'org-node-fakeroam-slugify-via-roam)
     (setq org-node-datestamp-format "%Y%m%d%H%M%S-")

   Make sure the underlying org-id package knows about the files
org-roam knows about.  You'd think it would, but that isn't a given!  Do
either of these two:

  1. Run ‘M-x org-roam-update-org-id-locations’ every now and then.

  2. Edit the following setting so it includes your
     ‘org-roam-directory’.  Supposing that is "~/org/", set this:

     (setq org-node-extra-id-dirs '("~/org/"))

   Finally, restart Emacs or run ‘M-x org-node-reset’.  Now things
should basically function as you expect.


File: org-node-fakeroam.info,  Node: Bonus setup,  Prev: Getting started,  Up: Top

2 Bonus setup
*************

* Menu:

* Speeding up the backlinks buffer::
* Speeding up the org-roam DB::
* Misc::


File: org-node-fakeroam.info,  Node: Speeding up the backlinks buffer,  Next: Speeding up the org-roam DB,  Up: Bonus setup

2.1 Speeding up the backlinks buffer
====================================

Enable this mode:

     (org-node-fakeroam-fast-render-mode) ;; build the Roam buffer faster

   You might further speed it up by enabling a mode mentioned in the
following section, ‘org-node-fakeroam-jit-backlinks-mode’ - but read
that section first.


File: org-node-fakeroam.info,  Node: Speeding up the org-roam DB,  Next: Misc,  Prev: Speeding up the backlinks buffer,  Up: Bonus setup

2.2 Speeding up the org-roam DB
===============================

If you've struggled in the past with big files taking a long time to
save, your struggle is over.

   First comes a choice: to keep ‘org-roam-db-autosync-mode’ on or to
turn it off?  If you keep it on, consider the following settings.

     (setq org-roam-db-update-on-save nil) ;; don't update DB on save, not needed
     (setq org-roam-link-auto-replace nil) ;; don't look for "roam:" links on save

   If instead you turn it off, you probably want to enable the following
mode.  Surprisingly, Roam's "autosync mode" did a lot of unrelated
things under one umbrella, such as this, which refreshes the visible
Roam buffer when the cursor moves.

     (org-node-fakeroam-redisplay-mode) ;; autorefresh the Roam buffer

   Second comes another choice: enable one _or both_ of the following
modes!

     (org-node-fakeroam-db-feed-mode) ;; keep Roam DB up to date
     (org-node-fakeroam-jit-backlinks-mode) ;; skip DB for Roam buffer

   What do they do?  The *DB-Feed-Mode* keeps the org-roam DB up to
date, by writing to it on save.  Use it if you have various Roam
extensions that need the DB.  It should be fast, but may still not be
instant on a large file.

   The *JIT-Backlinks-Mode* will generate backlinks for the Roam buffer
out of org-node's tables, so that no DB is needed for this purpose.


File: org-node-fakeroam.info,  Node: Misc,  Prev: Speeding up the org-roam DB,  Up: Bonus setup

2.3 Misc
========

* Menu:

* Tip Rebuilding the Roam DB::
* Tip On very slow filesystems::
* Tip Word-wrap in the Roam buffer?::


File: org-node-fakeroam.info,  Node: Tip Rebuilding the Roam DB,  Next: Tip On very slow filesystems,  Up: Misc

2.3.1 Tip: Rebuilding the Roam DB
---------------------------------

If you often have reason to full-reset the DB, there is a faster command
than ‘C-u M-x org-roam-db-sync’.  Try ‘M-x
org-node-fakeroam-db-rebuild’.  Benchmark on my device:

   • ‘C-u M-x org-roam-db-sync’: 179 seconds
   • ‘M-x org-node-fakeroam-db-rebuild’: 6 seconds

   Fair warning: a couple of data points will differ.

   • Each node will only record local tags, not all inherited tags
   • Each node will only record local properties, not all inherited
     properties
   • Files' recorded atime will be copied from the mtime
   • Files' recorded content hash will be the blank string

   This is a place where I request contributions, since 6 seconds still
seems a lot _slower_ than it needs to be.  I envisioned running this
function on every save - that's obviously not possible yet.  The
bottleneck seems to be in how EmacSQL is being called.


File: org-node-fakeroam.info,  Node: Tip On very slow filesystems,  Next: Tip Word-wrap in the Roam buffer?,  Prev: Tip Rebuilding the Roam DB,  Up: Misc

2.3.2 Tip: On very slow filesystems
-----------------------------------

I hear that on Termux on Android, filesystem access can be so slow that
it's a pain to cycle dailies with org-roam (11 seconds just to goto next
daily
(https://github.com/meedstrom/org-node/issues/24#issuecomment-2278605819)!).
A Redditor also said Apple NFS is not ideal for Emacs.

   Good news.  You can override some functions to make them look up
org-node tables and avoid the filesystem:

     (advice-add #'org-roam-list-files :override
                 #'org-node-fakeroam-list-files)

     (advice-add #'org-roam-dailies--list-files :override
                 #'org-node-fakeroam-list-dailies)

     (advice-add #'org-roam-dailies--daily-note-p :override
                 #'org-node-fakeroam-daily-note-p)

   You can also cache to disk all the Roam buffer contents (bearing in
mind that this stores cleartext under "~/.emacs.d"), so they do not need
re-generating if they have not changed:

     (org-node-fakeroam-enable-persist)


File: org-node-fakeroam.info,  Node: Tip Word-wrap in the Roam buffer?,  Prev: Tip On very slow filesystems,  Up: Misc

2.3.3 Tip: Word-wrap in the Roam buffer?
----------------------------------------

This has nothing to do with org-node, but I actually didn't know this
for ages.

   If you don't hard-wrap but prefer visual-line-mode or similar
(org-roam#1862 (https://github.com/org-roam/org-roam/issues/1862)), you
have to enable such modes yourself - it sensibly doesn't inherit your
Org hooks:

     (add-hook 'org-roam-mode-hook #'visual-line-mode)



Tag Table:
Node: Top234
Node: Getting started732
Node: Bonus setup1664
Node: Speeding up the backlinks buffer1867
Node: Speeding up the org-roam DB2326
Node: Misc3839
Node: Tip Rebuilding the Roam DB4069
Node: Tip On very slow filesystems5136
Node: Tip Word-wrap in the Roam buffer?6308

End Tag Table


Local Variables:
coding: utf-8
End:

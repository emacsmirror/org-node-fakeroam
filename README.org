#+TITLE: org-node-fakeroam
#+AUTHOR: Martin Edstr√∂m
#+EMAIL: meedstrom91@gmail.com
#+DATE: 2024
#+LANGUAGE: en
#+TEXINFO_DIR_CATEGORY: Emacs
#+TEXINFO_DIR_TITLE: Org-node-fakeroam: (org-node-fakeroam).
#+TEXINFO_DIR_DESC: Integrate org-roam and org-node.
#+EXPORT_FILE_NAME: org-node-fakeroam.info
#+HTML: <a href="https://melpa.org/#/org-node-fakeroam"><img alt="MELPA" src="https://melpa.org/packages/org-node-fakeroam-badge.svg"/></a>

Some awesome shims for integrating [[https://github.com/meedstrom/org-node][org-node]] with org-roam.

* Fundamental setup

These settings help you feel at home using both org-roam and org-node side-by-side:

#+begin_src elisp
(setq org-node-creation-fn #'org-node-fakeroam-new-via-roam-capture)
(setq org-node-slug-fn #'org-node-fakeroam-slugify-via-roam)
(setq org-node-datestamp-format "%Y%m%d%H%M%S-")
#+end_src

Make sure the underlying org-id package knows about the files org-roam knows about.  You'd think it would, but that isn't a given!  Do either of these two:

1. Run =M-x org-roam-update-org-id-locations= every now and then.

2. Edit the following setting so it includes your =org-roam-directory=.  Supposing that is "~/org/", set this:

#+begin_src elisp
(setq org-node-extra-id-dirs '("~/org/"))
#+end_src

Finally, restart Emacs or run =M-x org-node-reset=.  Now things should basically function as you expect.

* Bonus setup
** Speeding up the backlinks buffer

Enable this mode:

#+begin_src elisp
(org-node-fakeroam-fast-render-mode) ;; build the Roam buffer faster
#+end_src

You might further speed it up by enabling a mode mentioned in the following section, =org-node-fakeroam-jit-backlinks-mode= -- but read that section first.

** Speeding up the org-roam DB

If you've struggled in the past with big files taking a long time to save, your struggle is over.

First comes a choice: to keep =org-roam-db-autosync-mode= on or to turn it off?  If you keep it on, consider the following settings.

#+begin_src elisp
(setq org-roam-db-update-on-save nil) ;; don't update DB on save, not needed
(setq org-roam-link-auto-replace nil) ;; don't look for "roam:" links on save
#+end_src

If instead you turn it off, you probably want to enable the following mode.  Surprisingly, Roam's "autosync mode" did a lot of unrelated things under one umbrella, such as this, which refreshes the visible Roam buffer when the cursor moves.

#+begin_src elisp
(org-node-fakeroam-redisplay-mode) ;; autorefresh the Roam buffer
#+end_src

Second comes another choice: enable one /or both/ of the following modes.

#+begin_src elisp
(org-node-fakeroam-db-feed-mode) ;; keep Roam DB up to date
(org-node-fakeroam-jit-backlinks-mode) ;; skip DB for Roam buffer
#+end_src

What do they do?  The *DB-Feed-Mode* keeps the org-roam DB up to date, by writing to it on save.  Use it if you use various Roam extensions that need the DB.  It should be fast, but may still not be instant on a large file.

The *JIT-Backlinks-Mode* will generate backlinks for the Roam buffer out of org-node's tables, so that no DB is needed for this purpose.

** Misc
*** Tip: Rebuilding the Roam DB
If you often have reason to full-reset the DB, there is a faster command than =C-u M-x org-roam-db-sync=.  Try =M-x org-node-fakeroam-db-rebuild=.  Benchmark on my device:

- =C-u M-x org-roam-db-sync=: 179 seconds
- =M-x org-node-fakeroam-db-rebuild=: 6 seconds

Fair warning: a couple of data points will differ.

- Each node will only record local tags, not all inherited tags
- Each node will only record local properties, not all inherited properties
- Files' recorded atime will be copied from the mtime
- Files' recorded content hash will be the blank string

This is a place where I request contributions, since 6 seconds still seems a lot /slower/ than it needs to be.  I envisioned running this function on every save -- that's obviously not possible yet.  The bottleneck seems to be in how EmacSQL is being called.

*** Tip: On very slow filesystems

I hear that on Termux on Android, filesystem access can be so slow that it's a pain to cycle dailies with org-roam ([[https://github.com/meedstrom/org-node/issues/24#issuecomment-2278605819][11 seconds just to goto next daily]]!).  A Redditor also said Apple NFS is not ideal for Emacs.

Good news.  You can override some functions to make them look up org-node tables and avoid the filesystem:

#+begin_src elisp
(advice-add #'org-roam-list-files :override
            #'org-node-fakeroam-list-files)

(advice-add #'org-roam-dailies--list-files :override
            #'org-node-fakeroam-list-dailies)

(advice-add #'org-roam-dailies--daily-note-p :override
            #'org-node-fakeroam-daily-note-p)
#+end_src

*** Tip: Word-wrap in the Roam buffer?
This has nothing to do with org-node, but I actually didn't know this for ages.

If you don't hard-wrap but prefer visual-line-mode or similar ([[https://github.com/org-roam/org-roam/issues/1862][org-roam#1862]]), you have to enable such modes yourself -- it sensibly doesn't inherit your Org hooks:

#+begin_src elisp
(add-hook 'org-roam-mode-hook #'visual-line-mode)
#+end_src
